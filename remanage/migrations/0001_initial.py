# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-06-07 23:09
from __future__ import unicode_literals

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(default=datetime.datetime.now)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(max_length=30, verbose_name='last name')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'users',
                'db_table': 'users',
                'verbose_name': 'user',
            },
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(default=datetime.datetime.now)),
                ('name', models.CharField(max_length=120)),
                ('address', models.CharField(max_length=500)),
                ('purchase_price', models.DecimalField(decimal_places=2, max_digits=30)),
                ('percentage_down', models.FloatField()),
                ('interest_rate', models.FloatField()),
                ('monthly_hoa', models.DecimalField(decimal_places=2, max_digits=30)),
                ('property_tax_rate', models.FloatField()),
                ('monthly_home_insurance', models.DecimalField(decimal_places=2, max_digits=30)),
                ('management_rate', models.FloatField()),
                ('maintenance_factor', models.FloatField()),
                ('vacancy_factor', models.FloatField()),
                ('gross_monthly_rent', models.DecimalField(decimal_places=2, max_digits=30)),
                ('down_payment', models.DecimalField(decimal_places=2, max_digits=30)),
                ('initial_loan', models.DecimalField(decimal_places=2, max_digits=30)),
                ('monthly_mortgage', models.DecimalField(decimal_places=2, max_digits=30)),
                ('monthly_property_tax', models.DecimalField(decimal_places=2, max_digits=30)),
                ('total_monthly_expenses', models.DecimalField(decimal_places=2, max_digits=30)),
                ('gross_yearly_rent', models.DecimalField(decimal_places=2, max_digits=30)),
                ('net_monthly_cash_flow', models.DecimalField(decimal_places=2, max_digits=30)),
                ('net_annual_cash_flow', models.DecimalField(decimal_places=2, max_digits=30)),
                ('net_annual_roi', models.DecimalField(decimal_places=2, max_digits=30)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'properties',
            },
        ),
    ]
